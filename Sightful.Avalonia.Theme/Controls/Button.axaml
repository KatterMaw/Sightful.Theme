<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                    xmlns:assists="clr-namespace:Sightful.Avalonia.Theme.Assists">
	<SolidColorBrush x:Key="FlatButtonHoverBackgroundBrush" Color="{DynamicResource ButtonHoverBackground}" Opacity="0"/>
	<Design.PreviewWith>
        <Border Padding="40" Background="{DynamicResource OuterBackground}" Width="300">
	        <StackPanel>
	            <Button Content="Click Me!"/>
	            <Button>
		            <Button.Content>
			            <TextBlock Text="{Binding $self.Bounds.Height, StringFormat=Text Height: {0}}"/>
		            </Button.Content>
	            </Button>
		        <Button>
			        <StackPanel Orientation="Horizontal">
			            <icons:MaterialIcon Kind="ExitToApp"/>
			            <TextBlock Name="TextBlock" Text="Sign out"/>
		            </StackPanel>
	            </Button>
	            <Button Content="{icons:MaterialIconExt Play}" Classes="square" ToolTip.Tip="I'm square!"/>
	            <Button Content="Flat" Classes="flat" HorizontalAlignment="Left"/>
	            <StackPanel Orientation="Horizontal">
		            <Button Content="{icons:MaterialIconExt Puzzle}"
		                    Classes="wide square flat"
		                    HorizontalAlignment="Left"/>
		            <Button Content="{icons:MaterialIconExt CogOutline}"
		                    Classes="wide square low-accent"
		                    HorizontalAlignment="Left"/>
		            <Button Content="Sign in"
		                    Classes="wide high-accent"
		                    HorizontalAlignment="Left"/>
	            </StackPanel>
	            <Button Classes="high-accent">
		            <StackPanel Orientation="Horizontal">
			            <TextBlock Text="Sign in"/>
			            <icons:MaterialIcon Kind="ArrowRight"/>
		            </StackPanel>
	            </Button>
	        </StackPanel>
        </Border>
    </Design.PreviewWith>
	
    <ControlTheme x:Key="{x:Type Button}" TargetType="Button">
	    <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="17 8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip.Placement" Value="Top"/>
        <Setter Property="ToolTip.VerticalOffset" Value="0"/>
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="assists:ShadowAssist.BoxShadow" Value="0 5 5 0 #60000000"/>
	    <Setter Property="Margin" Value="6"/>
	    <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Transitions">
	        <Transitions>
		        <BrushTransition Property="Background" Duration="0:0:0.1"/>
	        </Transitions>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate>
	            <ContentPresenter Foreground="{TemplateBinding Foreground}"
	                              Background="{TemplateBinding Background}"
	                              CornerRadius="{TemplateBinding CornerRadius}"
	                              Content="{TemplateBinding Content}"
	                              ContentTemplate="{TemplateBinding ContentTemplate}"
	                              Padding="{TemplateBinding Padding}"
	                              RecognizesAccessKey="True"
	                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
	                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
	                              BoxShadow="{TemplateBinding assists:ShadowAssist.BoxShadow}"
	                              BorderBrush="{TemplateBinding BorderBrush}"
	                              BorderThickness="{TemplateBinding BorderThickness}">
		            <ContentPresenter.Transitions>
			            <Transitions>
				            <BoxShadowsTransition Property="BoxShadow" Duration="0:0:0.1"/>
			            </Transitions>
		            </ContentPresenter.Transitions>
	            </ContentPresenter>
            </ControlTemplate>
        </Setter>
        
        <Style Selector="^.flat">
	        <Setter Property="Background" Value="{StaticResource FlatButtonHoverBackgroundBrush}"/>
	        <Setter Property="BorderBrush" Value="Transparent"/>
	        <Style Selector="^:not(:pointerover)">
		        <Setter Property="assists:ShadowAssist.BoxShadow" Value="0 0 0 0 #90000000"/>
	        </Style>
        </Style>
        
        <Style Selector="^.square">
	        <Setter Property="Width" Value="{Binding $self.Bounds.Height}"/>
	        <Setter Property="Padding" Value="10"/>
        </Style>
        
        <Style Selector="^.wide">
	        <Setter Property="Height" Value="48"/>
        </Style>
        
	    <Style Selector="^:pointerover">
		    <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}"/>
		    <Setter Property="BorderBrush" Value="{DynamicResource ButtonHoverBackground}"/>
	    </Style>
        
	    <Style Selector="^:pressed">
		    <Setter Property="Background" Value="{DynamicResource PressedButtonBackground}"/>
		    <Setter Property="BorderBrush" Value="Transparent"/>
	    </Style>
        
	    <Style Selector="^.low-accent">
		    <Setter Property="Background" Value="{DynamicResource LowAccentButtonBackground}"/>
        
		    <Style Selector="^:pointerover">
			    <Setter Property="Background" Value="{DynamicResource LowAccentHoveredButtonBackground}"/>
		    </Style>
        
		    <Style Selector="^:pressed">
			    <Setter Property="Background" Value="{DynamicResource LowAccentPressedButtonBackground}"/>
		    </Style>
	    </Style>
	    
	    <Style Selector="^.high-accent">
		    <Setter Property="Background" Value="{DynamicResource HighAccentButtonBackground}"/>
		    <Setter Property="Foreground" Value="{DynamicResource HighAccentButtonForeground}"/>
        
		    <Style Selector="^:pointerover">
			    <Setter Property="Background" Value="{DynamicResource HighAccentHoveredButtonBackground}"/>
		    </Style>
        
		    <Style Selector="^:pressed">
			    <Setter Property="Background" Value="{DynamicResource HighAccentPressedButtonBackground}"/>
		    </Style>
	    </Style>
        
    </ControlTheme>
    
</ResourceDictionary>